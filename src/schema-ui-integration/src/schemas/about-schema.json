{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "User Profile Schema",
  "description": "Enhanced schema for user profiles to provide personalized agent interactions",
  "type": "object",
  "required": ["userId", "personal", "goals", "preferences", "agentSettings"],
  "properties": {
    "userId": {
      "type": "string",
      "description": "Unique UUID identifier for the user",
      "examples": ["550e8400-e29b-41d4-a716-446655440000"]
    },
    "personal": {
      "type": "object",
      "description": "User's personal information",
      "required": ["name", "skills"],
      "properties": {
        "name": {
          "type": "string",
          "description": "User's full name",
          "minLength": 1,
          "examples": ["Jane Smith"]
        },
        "contact": {
          "type": "object",
          "description": "User's contact information",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email address",
              "format": "email",
              "examples": ["jane@example.com"]
            },
            "phone": {
              "type": "string",
              "description": "User's phone number",
              "examples": ["+1 123 456 7890"]
            }
          }
        },
        "skills": {
          "type": "array",
          "description": "User's technical skills and knowledge",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "examples": [["Python", "React", "Prompt Engineering"]]
        },
        "communicationStyle": {
          "type": "string",
          "description": "User's preferred communication style",
          "examples": ["concise, technical"]
        }
      }
    },
    "goals": {
      "type": "object",
      "description": "User's personal and professional goals",
      "properties": {
        "shortTerm": {
          "type": "array",
          "description": "User's short-term goals",
          "items": {
            "type": "string"
          },
          "examples": [["Complete Project X", "Implement new tests"]]
        },
        "longTerm": {
          "type": "array",
          "description": "User's long-term goals",
          "items": {
            "type": "string"
          },
          "examples": [["Become an AI agent expert", "Become a lead developer"]]
        }
      }
    },
    "companyContext": {
      "type": "object",
      "description": "User's professional context and company environment",
      "properties": {
        "currentCompany": {
          "type": "string",
          "description": "User's current company",
          "examples": ["Claude Inc."]
        },
        "role": {
          "type": "string",
          "description": "User's current position or role",
          "examples": ["Lead AI Developer"]
        },
        "industryFocus": {
          "type": "array",
          "description": "Industries the user focuses on",
          "items": {
            "type": "string"
          },
          "examples": [["Software Development", "AI"]]
        },
        "teamSize": {
          "type": "string",
          "description": "Size of the development team",
          "enum": ["solo", "small", "medium", "large"],
          "default": "medium"
        }
      }
    },
    "preferences": {
      "type": "object",
      "description": "User interface and interaction preferences",
      "required": ["uiTheme"],
      "properties": {
        "uiTheme": {
          "type": "string",
          "description": "UI theme preference",
          "enum": ["light", "dark", "system"],
          "default": "dark"
        },
        "language": {
          "type": "string",
          "description": "Preferred language",
          "enum": ["en", "de", "fr", "es"],
          "default": "en"
        },
        "aiInteractionStyle": {
          "type": "string",
          "description": "Preferred AI interaction style",
          "enum": ["collaborative", "directive", "explorative"],
          "default": "collaborative"
        },
        "notificationFrequency": {
          "type": "string",
          "description": "Frequency of notifications",
          "enum": ["none", "daily", "weekly", "immediate"],
          "default": "daily"
        },
        "colorScheme": {
          "type": "object",
          "description": "Custom color definitions for UI elements",
          "required": [
            "primary", "secondary", "accent", "success", "warning", 
            "danger", "info", "background", "surface", "text", 
            "textSecondary", "border"
          ],
          "properties": {
            "primary": {
              "type": "string",
              "description": "Primary UI color",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#bb86fc"]
            },
            "secondary": {
              "type": "string",
              "description": "Secondary UI color",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#03dac6"]
            },
            "accent": {
              "type": "string",
              "description": "Accent color for highlights",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#cf6679"]
            },
            "success": {
              "type": "string",
              "description": "Color for success states",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#4caf50"]
            },
            "warning": {
              "type": "string",
              "description": "Color for warning states",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#ff9800"]
            },
            "danger": {
              "type": "string",
              "description": "Color for error or danger states",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#cf6679"]
            },
            "info": {
              "type": "string",
              "description": "Color for informational states",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#2196f3"]
            },
            "background": {
              "type": "string",
              "description": "Background color for the user interface",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#121212"]
            },
            "surface": {
              "type": "string",
              "description": "Surface color for cards and elevated elements",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color", 
              "examples": ["#1e1e1e"]
            },
            "text": {
              "type": "string",
              "description": "Primary text color",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#ffffff"]
            },
            "textSecondary": {
              "type": "string",
              "description": "Secondary text color for less important content",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#b0b0b0"]
            },
            "border": {
              "type": "string",
              "description": "Border color for UI elements",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "format": "color",
              "examples": ["#333333"]
            }
          }
        }
      }
    },
    "agentSettings": {
      "type": "object",
      "description": "Settings for AI agent functionalities",
      "required": ["isActive"],
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Whether the AI agent is activated",
          "default": true
        },
        "capabilities": {
          "type": "array",
          "description": "Enabled capabilities of the AI agent",
          "items": {
            "type": "string"
          },
          "examples": [["Code Analysis", "Document Summarization", "Bug Detection"]]
        },
        "connectedServices": {
          "type": "array",
          "description": "Connected services and tools for the AI agent",
          "items": {
            "type": "string"
          },
          "examples": [["claude", "google_calendar_tool", "mcp_user_profile_context"]]
        },
        "debugPreferences": {
          "type": "object",
          "description": "User's preferences for debugging workflows",
          "properties": {
            "strategy": {
              "type": "string",
              "description": "Preferred debugging methodology",
              "enum": ["bottom-up", "top-down"],
              "default": "bottom-up"
            },
            "detailLevel": {
              "type": "string",
              "description": "Preferred level of detail in debugging reports",
              "enum": ["low", "medium", "high"],
              "default": "medium"
            },
            "autoFix": {
              "type": "boolean",
              "description": "Whether to automatically fix errors when possible",
              "default": true
            }
          }
        }
      }
    },
    "workEnvironment": {
      "type": "object",
      "description": "Details about the user's technical work environment",
      "properties": {
        "editor": {
          "type": "string",
          "description": "Preferred code editor or IDE",
          "examples": ["VS Code", "IntelliJ", "Vim"]
        },
        "os": {
          "type": "string",
          "description": "Operating system",
          "examples": ["Windows", "macOS", "Linux"]
        },
        "cicd": {
          "type": "string",
          "description": "CI/CD platform",
          "examples": ["GitHub Actions", "Jenkins", "GitLab CI"]
        },
        "gitWorkflow": {
          "type": "string",
          "description": "Preferred Git workflow",
          "enum": ["GitFlow", "GitHub Flow", "Trunk-Based", "Custom"],
          "default": "GitFlow"
        }
      }
    },
    "projectContext": {
      "type": "object",
      "description": "Information about the user's project context",
      "properties": {
        "currentProjects": {
          "type": "array",
          "description": "List of current projects",
          "items": {
            "type": "string"
          },
          "examples": [["Claude Framework", "AI Agent Dashboard"]]
        },
        "architecturePatterns": {
          "type": "array",
          "description": "Architecture patterns in use",
          "items": {
            "type": "string"
          },
          "examples": [["Microservices", "MVC", "CQRS", "DDD"]]
        }
      }
    },
    "learningPreferences": {
      "type": "object",
      "description": "User's learning style preferences",
      "properties": {
        "resources": {
          "type": "array",
          "description": "Preferred learning resources",
          "items": {
            "type": "string",
            "enum": ["Documentation", "Tutorials", "Examples", "Videos", "Interactive"]
          }
        },
        "feedbackStyle": {
          "type": "string",
          "description": "Preferred feedback style",
          "enum": ["direct", "suggestive", "explanatory"],
          "default": "explanatory"
        },
        "adaptationPace": {
          "type": "string",
          "description": "How quickly the user adopts new technologies",
          "enum": ["cautious", "moderate", "early adopter"],
          "default": "moderate"
        }
      }
    }
  }
}