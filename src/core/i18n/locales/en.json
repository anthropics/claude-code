{
  "cicd": {
    "buildStarted": "Build process started",
    "buildCompleted": "Build process completed successfully",
    "buildFailed": "Build process failed: {{reason}}",
    "testStarted": "Running tests",
    "testPassed": "All tests passed",
    "testFailed": "Tests failed: {{reason}}",
    "deployStarted": "Starting deployment to {{environment}}",
    "deployCompleted": "Deployment to {{environment}} completed successfully",
    "deployFailed": "Deployment to {{environment}} failed: {{reason}}",
    "releaseCreated": "Release v{{version}} created successfully",
    "securityCheckStarted": "Starting security check",
    "securityCheckPassed": "Security check passed",
    "securityCheckFailed": "Security check failed: {{reason}}"
  },
  "security": {
    "reviewInitialized": "Security review system initialized",
    "validatorsRegistered": "Security validators registered",
    "startingValidation": "Starting security validation",
    "runningValidator": "Running security validator: {{name}}",
    "validatorCompleted": "Security validator completed: {{name}}",
    "validatorFailed": "Security validator failed: {{name}}",
    "validatorError": "Error in security validator: {{name}}",
    "validationComplete": "Security validation complete",
    "reportSaved": "Security report saved to: {{filePath}}",
    "reportSaveError": "Error saving security report",
    "checkingApiKeyExposure": "Checking for API key exposure",
    "checkingDependencies": "Checking dependencies for vulnerabilities",
    "checkingConfigConstraints": "Checking security constraints in configuration",
    "checkingFilePermissions": "Checking file permissions",
    "checkingSecureCommunication": "Checking secure communication protocols",
    "checkingInputValidation": "Checking input validation",
    "checkingAuthentication": "Checking authentication mechanisms",
    "checkingAuditLogging": "Checking audit logging",
    "apiInitialized": "Secure API initialized"
  },
  "common": {
    "welcome": "Welcome to the Claude Neural Framework",
    "greeting": "Hello, {{name}}\!",
    "fileCount": "{{count}} file|{{count}} files",
    "back": "Back",
    "next": "Next",
    "save": "Save",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "search": "Search",
    "noResults": "No results found"
  },
  "framework": {
    "starting": "Starting framework...",
    "ready": "Framework is ready",
    "stopping": "Stopping framework...",
    "restarting": "Restarting framework..."
  },
  "mcp": {
    "connecting": "Connecting to MCP server...",
    "connected": "Connected to MCP server",
    "disconnected": "Disconnected from MCP server",
    "reconnecting": "Attempting to reconnect to MCP server...",
    "serverStarting": "Starting MCP server...",
    "serverStarted": "MCP server started on port {{port}}",
    "serverStopping": "Stopping MCP server...",
    "serverError": "MCP server error: {{message}}",
    "clientInitialized": "Claude MCP Client initialized successfully",
    "initClient": "Initializing Anthropic client",
    "serverAlreadyRunning": "Server is already running",
    "serverNotFound": "Server not found",
    "serverDisabled": "Server is disabled",
    "serverStartSuccess": "Server started successfully",
    "serverStopSuccess": "Server stopped successfully",
    "serverStopFailed": "Failed to stop server",
    "allServersStopped": "All servers stopped",
    "generatingResponse": "Generating response",
    "responseGenerated": "Response generated successfully",
    "startingRequiredServers": "Starting required MCP servers"
  },
  "rag": {
    "indexing": "Indexing documents...",
    "indexed": "{{count}} document indexed|{{count}} documents indexed",
    "querying": "Querying...",
    "noMatches": "No matching results found",
    "generating": "Generating response...",
    "databaseConnecting": "Connecting to vector database...",
    "databaseConnected": "Connected to vector database",
    "databaseError": "Database error: {{message}}"
  },
  "errors": {
    "notFound": "Resource not found",
    "serverError": "Server error occurred",
    "connectionFailed": "Connection failed",
    "authFailed": "Authentication failed",
    "invalidInput": "Invalid input",
    "missingParameter": "Missing parameter: {{param}}",
    "timeout": "Timeout exceeded",
    "configError": "Configuration error: {{message}}",
    "fileNotFound": "File not found: {{path}}",
    "permissionDenied": "Permission denied",
    "databaseError": "Database error: {{message}}",
    "apiError": "API error: {{message}}",
    "clientInitFailed": "Failed to initialize Claude MCP Client",
    "noApiKey": "No Anthropic API key found in environment variables",
    "anthropicNotInitialized": "Anthropic client not initialized - API key missing",
    "failedToGenerateResponse": "Failed to generate response",
    "securityInitFailed": "Failed to initialize security module",
    "securityReviewFailed": "Security review failed: {{message}}",
    "securityViolation": "Security violation detected: {{message}}",
    "insecureConfiguration": "Insecure configuration detected: {{setting}}",
    "apiKeyExposed": "API key or secret exposed in: {{location}}",
    "vulnerableDependency": "Vulnerable dependency detected: {{package}}",
    "httpsRequired": "HTTPS is required for this API",
    "rateLimitExceeded": "Rate limit exceeded. Try again later.",
    "invalidCsrfToken": "Invalid or missing CSRF token",
    "unexpectedError": "An unexpected error occurred",
    "requestError": "Error processing request"
  },
  "ui": {
    "dashboard": {
      "title": "Dashboard",
      "overview": "Overview",
      "stats": "Statistics",
      "agents": "Agents",
      "servers": "Servers",
      "tasks": "Tasks",
      "logs": "Logs"
    },
    "settings": {
      "title": "Settings",
      "general": "General",
      "appearance": "Appearance",
      "connections": "Connections",
      "security": "Security",
      "advanced": "Advanced",
      "save": "Save settings",
      "reset": "Reset settings"
    }
  }
}
